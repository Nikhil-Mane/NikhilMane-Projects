import tkinter as tk
import tkinter.ttk as ttk
import os
from tkinter import messagebox
import mysql.connector as con
class hospital:
    def __init__(self,root):
        bg_color="light green"
        self.connection=con.connect(host="localhost",user="root",password="root",database="student")
        self.root=root
        ################# variable for entry field #############
        self.name_of_tablet=tk.StringVar()
        self.reference=tk.StringVar()
        self.Dose=tk.StringVar()
        self.Lot=tk.StringVar()
        self.no_of_tablet=tk.IntVar()
        self.issue=tk.StringVar()
        self.exp=tk.StringVar()
        self.dailydose=tk.StringVar()
        self.sideeffect=tk.StringVar()
        self.further=tk.StringVar()
        self.blopd=tk.StringVar()
        self.body=tk.StringVar()
        self.storage=tk.StringVar()
        self.meditationn=tk.StringVar()
        self.patient_name=tk.StringVar()
        self.patientid=tk.StringVar()
        self.nhs_number=tk.StringVar()
        self.patient_addresss=tk.StringVar()
        self.date=tk.StringVar()
        self.ward=tk.StringVar()
        self.status=tk.StringVar()
        # ############### top frame ##############
        self.top_frame=tk.Frame(self.root,bd=15,bg=bg_color,relief="groove")
        self.top_frame.place(x=0,y=0,width=1530,height=100)
        self.label=tk.Label(self.top_frame,text=" + WELCOME TO HOSPITAL MANAGEMENT SYSTEM ",font=("times new roman",40,"bold"),fg="red")
        self.label.pack(fill="both")
        ################## middle frame  ##########
        self.input=tk.Frame(self.root,bd=15,bg=bg_color,relief="groove")
        self.input.place(x=0,y=105,height=395,width=1530)

        ################ input frame #############
        self.input=tk.LabelFrame(self.root,text="Patient info",fg="red",font=("times new roman",16,"bold"),bd=8,relief="groove",padx=10,pady=5)
        self.input.place(x=25,y=130,height=350,width=940)

        self.name_tablet=tk.Label(self.input,text="Name of Tablet",width=15,font=("times new roman",14,"bold"),bg=bg_color)
        self.name_tablet.grid(row=0,column=0,padx=5,pady=5,rowspan=1)
        self.name_tablet_entry=tk.Entry(self.input,textvariable=self.name_of_tablet,width=10,bd=5,font=("times new roman",14,"bold"),relief="groove")
        self.name_tablet_entry.grid(row=0,column=1,padx=5,pady=5,rowspan=1)

        self.reference_no=tk.Label(self.input,text="Referance No",width=15,font=("times new roman",14,"bold"),bg=bg_color)
        self.reference_no.grid(row=1,column=0,padx=5,pady=5,rowspan=1)
        self.referance_no_entry=tk.Entry(self.input,textvariable=self.reference,width=10,bd=5,font=("times new roman",14,"bold"),relief="groove")
        self.referance_no_entry.grid(row=1,column=1,padx=5,pady=5,rowspan=1)

        self.dose=tk.Label(self.input,text="Dose",width=15,font=("times new roman",14,"bold"),bg=bg_color)
        self.dose.grid(row=2,column=0,padx=5,pady=5,rowspan=1)
        self.dose_entry=tk.Entry(self.input,textvariable=self.Dose,width=10,bd=5,font=("times new roman",14,"bold"),relief="groove")
        self.dose_entry.grid(row=2,column=1,padx=5,pady=5,rowspan=1)

        self.lot=tk.Label(self.input,text="Lot:",width=15,font=("times new roman",14,"bold"),bg=bg_color)
        self.lot.grid(row=3,column=0,padx=5,pady=5,rowspan=1)
        self.lot_entry=tk.Entry(self.input,textvariable=self.Lot,width=10,bd=5,font=("times new roman",14,"bold"),relief="groove")
        self.lot_entry.grid(row=3,column=1,padx=5,pady=5,rowspan=1)

        self.No_tablet=tk.Label(self.input,text="NO of Tablets",width=15,font=("times new roman",14,"bold"),bg=bg_color)
        self.No_tablet.grid(row=4,column=0,padx=5,pady=5,rowspan=1)
        self.No_tablet_entry=tk.Entry(self.input,textvariable=self.no_of_tablet,width=10,bd=5,font=("times new roman",14,"bold"),relief="groove")
        self.No_tablet_entry.grid(row=4,column=1,padx=5,pady=5,rowspan=1)

        self.issue_date=tk.Label(self.input,text="Issue date ",width=15,font=("times new roman",14,"bold"),bg=bg_color)
        self.issue_date.grid(row=5,column=0,padx=5,pady=5,rowspan=1)
        self.issue_date_entry=tk.Entry(self.input,textvariable=self.issue,width=10,bd=5,font=("times new roman",14,"bold"),relief="groove")
        self.issue_date_entry.grid(row=5,column=1,padx=5,pady=5,rowspan=1)

        self.exp_date=tk.Label(self.input,text="Exp Date",width=15,font=("times new roman",14,"bold"),bg=bg_color)
        self.exp_date.grid(row=6,column=0,padx=5,pady=5,rowspan=1)
        self.exp_date_entry=tk.Entry(self.input,textvariable=self.exp,width=10,bd=5,font=("times new roman",14,"bold"),relief="groove")
        self.exp_date_entry.grid(row=6,column=1,padx=5,pady=5,rowspan=1)

        self.daily_dose=tk.Label(self.input,text="Daily Dose",width=15,font=("times new roman",14,"bold"),bg=bg_color)
        self.daily_dose.grid(row=0,column=2,padx=5,pady=5,rowspan=1)
        self.daily_dose_entry=tk.Entry(self.input,textvariable=self.dailydose,width=10,bd=5,font=("times new roman",14,"bold"),relief="groove")
        self.daily_dose_entry.grid(row=0,column=3,padx=5,pady=5,rowspan=1)

        self.side_effect=tk.Label(self.input,text="Side Effect",width=15,font=("times new roman",14,"bold"),bg=bg_color)
        self.side_effect.grid(row=1,column=2,padx=5,pady=5,rowspan=1)
        self.side_effect_entry=tk.Entry(self.input,textvariable=self.sideeffect,width=10,bd=5,font=("times new roman",14,"bold"),relief="groove")
        self.side_effect_entry.grid(row=1,column=3,padx=5,pady=5,rowspan=1)

        self.futher_info=tk.Label(self.input,text="Further Info",width=15,font=("times new roman",14,"bold"),bg=bg_color)
        self.futher_info.grid(row=2,column=2,padx=5,pady=5,rowspan=1)
        self.futher_info_entry=tk.Entry(self.input,textvariable=self.further,width=10,bd=5,font=("times new roman",14,"bold"),relief="groove")
        self.futher_info_entry.grid(row=2,column=3,padx=5,pady=5,rowspan=1)

        self.blood_pressure=tk.Label(self.input,text="Blood Pressure",width=15,font=("times new roman",14,"bold"),bg=bg_color)
        self.blood_pressure.grid(row=3,column=2,padx=5,pady=5,rowspan=1)
        self.blood_pressure_entry=tk.Entry(self.input,textvariable=self.blopd,width=10,bd=5,font=("times new roman",14,"bold"),relief="groove")
        self.blood_pressure_entry.grid(row=3,column=3,padx=5,pady=5,rowspan=1)

        self.body_temp=tk.Label(self.input,text="Body Temperature",width=15,font=("times new roman",14,"bold"),bg=bg_color)
        self.body_temp.grid(row=4,column=2,padx=5,pady=5,rowspan=1)
        self.body_temp_entry=tk.Entry(self.input,textvariable=self.body,width=10,bd=5,font=("times new roman",14,"bold"),relief="groove")
        self.body_temp_entry.grid(row=4,column=3,padx=5,pady=5,rowspan=1)

        self.Storage_advice=tk.Label(self.input,text="Storage Advice",width=15,font=("times new roman",14,"bold"),bg=bg_color)
        self.Storage_advice.grid(row=5,column=2,padx=5,pady=5,rowspan=1)
        self.Storage_advice_entry=tk.Entry(self.input,textvariable=self.storage,width=10,bd=5,font=("times new roman",14,"bold"),relief="groove")
        self.Storage_advice_entry.grid(row=5,column=3,padx=5,pady=5,rowspan=1)

        self.meditation=tk.Label(self.input,text="Meditation",width=15,font=("times new roman",14,"bold"),bg=bg_color)
        self.meditation.grid(row=6,column=2,padx=5,pady=5,rowspan=1)
        self.meditation_entry=tk.Entry(self.input,textvariable=self.meditationn,width=10,bd=5,font=("times new roman",14,"bold"),relief="groove")
        self.meditation_entry.grid(row=6,column=3,padx=5,pady=5,rowspan=1)

        self.patient=tk.Label(self.input,text="Patient Name",width=15,font=("times new roman",14,"bold"),bg=bg_color)
        self.patient.grid(row=0,column=4,padx=5,pady=5,rowspan=1)
        self.patient_entry=tk.Entry(self.input,textvariable=self.patient_name,width=10,bd=5,font=("times new roman",14,"bold"),relief="groove")
        self.patient_entry.grid(row=0,column=5,padx=5,pady=5,rowspan=1)

        self.patient_id=tk.Label(self.input,text="Patient Id",width=15,font=("times new roman",14,"bold"),bg=bg_color)
        self.patient_id.grid(row=1,column=4,padx=5,pady=5,rowspan=1)
        self.patient_id_entry=tk.Entry(self.input,textvariable=self.patientid,width=10,bd=5,font=("times new roman",14,"bold"),relief="groove")
        self.patient_id_entry.grid(row=1,column=5,padx=5,pady=5,rowspan=1)

        self.nhs=tk.Label(self.input,text="NHS Number",width=15,font=("times new roman",14,"bold"),bg=bg_color)
        self.nhs.grid(row=2,column=4,padx=5,pady=5,rowspan=1)
        self.nsh_entry=tk.Entry(self.input,textvariable=self.nhs_number,width=10,bd=5,font=("times new roman",14,"bold"),relief="groove")
        self.nsh_entry.grid(row=2,column=5,padx=5,pady=5,rowspan=1)

        self.patient_address=tk.Label(self.input,text="Patient address",width=15,font=("times new roman",14,"bold"),bg=bg_color)
        self.patient_address.grid(row=3,column=4,padx=5,pady=5,rowspan=1)
        self.patient_address_entry=tk.Entry(self.input,textvariable=self.patient_addresss,width=10,bd=5,font=("times new roman",14,"bold"),relief="groove")
        self.patient_address_entry.grid(row=3,column=5,padx=5,pady=5,rowspan=1)

        self.date_birth=tk.Label(self.input,text="Date of Birth",width=15,font=("times new roman",14,"bold"),bg=bg_color)
        self.date_birth.grid(row=4,column=4,padx=5,pady=5,rowspan=1)
        self.date_birth_entry=tk.Entry(self.input,textvariable=self.date,width=10,bd=5,font=("times new roman",14,"bold"),relief="groove")
        self.date_birth_entry.grid(row=4,column=5,padx=5,pady=5,rowspan=1)

        self.patient_ward=tk.Label(self.input,text="Patient Ward",width=15,font=("times new roman",14,"bold"),bg=bg_color)
        self.patient_ward.grid(row=5,column=4,padx=5,pady=5,rowspan=1)
        self.patient_ward_entry=tk.Entry(self.input,textvariable=self.ward,width=10,bd=5,font=("times new roman",14,"bold"),relief="groove")
        self.patient_ward_entry.grid(row=5,column=5,padx=5,pady=5,rowspan=1)

        self.patient_status=tk.Label(self.input,text="Patient Status",width=15,font=("times new roman",14,"bold"),bg=bg_color)
        self.patient_status.grid(row=6,column=4,padx=5,pady=5,rowspan=1)
        self.patient_status_entry=tk.Entry(self.input,textvariable=self.status,width=10,bd=5,font=("times new roman",14,"bold"),relief="groove")
        self.patient_status_entry.grid(row=6,column=5,padx=5,pady=5,rowspan=1)
        
        ########### display data frame ###########
        self.input_data=tk.LabelFrame(self.root,text="Precription",fg="red",font=("times new roman",16,"bold"),bd=8,relief="groove",padx=10,pady=20)
        self.input_data.place(x=970,y=130,height=350,width=540)
        self.scroll_bar_text=tk.Scrollbar(self.input_data,orient="vertical")
        self.text_data=tk.Text(self.input_data,font=("times new roman",16),yscrollcommand=self.scroll_bar_text.set)
        self.scroll_bar_text.pack(side="right",fill="y")
        self.scroll_bar_text.config(command=self.text_data.yview)
        self.text_data.pack(fill="both",expand=True)
        ############# button frame ########################
        self.buttons=tk.Frame(self.root,bd=15,bg=bg_color,relief="groove")
        self.buttons.place(x=0,y=500,width=1530,height=100)
        self.precreption=tk.Button(self.buttons,command=self.display_data,text="Precription",font=("times new roman",20,"bold"),width=14)
        self.precreption.grid(row=0,column=0,padx=10,pady=10)
        self.save=tk.Button(self.buttons,command=self.save_data,text="Save",font=("times new roman",20,"bold"),width=14)
        self.save.grid(row=0,column=1,padx=10,pady=10)
        self.update=tk.Button(self.buttons,command=self.update_data,text="Update",font=("times new roman",20,"bold"),width=14)
        self.update.grid(row=0,column=2,padx=10,pady=10)
        self.delete=tk.Button(self.buttons,command=self.delete_row,text="Delete",font=("times new roman",20,"bold"),width=14)
        self.delete.grid(row=0,column=3,padx=10,pady=10)
        self.Reset=tk.Button(self.buttons,text="Reset",command=self.clear_data,font=("times new roman",20,"bold"),width=13)
        self.Reset.grid(row=0,column=4,padx=10,pady=10)
        self.Exit=tk.Button(self.buttons,command=self.exit_software,text="Exit",font=("times new roman",20,"bold"),width=13)
        self.Exit.grid(row=0,column=5,padx=10,pady=10)

        ############### database table ####################
        self.table_show=tk.Frame(self.root,bd=15,bg=bg_color,relief="groove")
        self.table_show.place(x=0,y=600,width=1530,height=200)
        self.scroll=tk.Scrollbar(self.table_show,orient="vertical")
        self.scroll_1=tk.Scrollbar(self.table_show,orient="horizontal")
        self.table=ttk.Treeview(self.table_show,yscrollcommand=self.scroll.set,xscrollcommand=self.scroll_1.set)
        self.scroll.pack(side="right",fill="y")
        self.scroll.config(command=self.table.yview)
        self.scroll_1.pack(side="bottom",fill="x")
        self.scroll_1.config(command=self.table.xview)
        self.table.pack(fill="both")

        self.table["columns"] = ("PATIENT NAME","PATIENT ID","NHS NUMBER","PATIENT ADDRESS","DATE OF BIRTH","PATIENT WARD","PATIENT STATUS","NAME OF TABLET","REFERANCE NO","DOSE","LOT","NO OF TABLETS","ISSUE DATE","EXP DATE","DAILY DOSE","SIDE EFFECT","FURTHER INFO","BLOOD PRESSURE","BODY TEMPARATURE","STORAGE ADVICE","MEDITATION") 
        self.table['show'] = 'headings'
        self.table.column("0", width = 90, anchor ='c')
        self.table.heading("0",text="PATIENT NAME")
        self.table.column("1", width = 90, anchor ='c')
        self.table.heading("1",text="PATIENT ID")
        self.table.column("2", width = 90, anchor ='c')
        self.table.heading("2",text="NHS NUMBER") 
        self.table.column("3", width = 120, anchor ='c')
        self.table.heading("3",text="PATIENT ADDRESS")
        self.table.column("4", width = 120, anchor ='c')
        self.table.heading("4",text="DETE OF BIRTH")
        self.table.column("5", width = 120, anchor ='c')
        self.table.heading("5",text="PATIENT WARD")
        self.table.column("6", width = 120, anchor ='c')
        self.table.heading("6",text="PATIENT STATUS")
        self.table.column("7", width = 120, anchor ='c')
        self.table.heading("7",text="NAME OF TABLET")
        self.table.column("8", width = 120, anchor ='c')
        self.table.heading("8",text="REFERANCE NO")
        self.table.column("9", width = 90, anchor ='c')
        self.table.heading("9",text="DOSE")
        self.table.column("10", width = 90, anchor ='c')
        self.table.heading("10",text="LOT")
        self.table.column("11", width = 120, anchor ='c')
        self.table.heading("11",text="NO OF TABLETS")
        self.table.column("12", width = 90, anchor ='c')
        self.table.heading("12",text="ISSUE DATE")
        self.table.column("13", width = 90, anchor ='c')
        self.table.heading("13",text="EXP DATE")
        self.table.column("14", width = 120, anchor ='c')
        self.table.heading("14",text="DAILY DOSE")
        self.table.column("15", width = 120, anchor ='c')
        self.table.heading("15",text="SIDE EFFECT")
        self.table.column("16", width = 120, anchor ='c')
        self.table.heading("16",text="FURTHER INFO")
        self.table.column("17", width = 120, anchor ='c')
        self.table.heading("17",text="BLOOD PRESSURE")
        self.table.column("18", width = 140, anchor ='c')
        self.table.heading("18",text="BODY TEMPARATURE")
        self.table.column("19", width = 120, anchor ='c')
        self.table.heading("19",text="STORAGE ADVICE")
        self.table.column("20", width = 120, anchor ='c')
        self.table.heading("20",text="MEDITATION")
        self.table.bind("<ButtonRelease-1>",self.get_cursor)
        self.display_table()
    def save_data(self):
        self.n=messagebox.askyesno("ASK","You want to save data")
        if self.n>0:
            self.save_dataa=self.text_data.get(1.0,"end")
            f1=open("Hospital_data/"+str(self.patientid.get())+".txt","w")
            f1.write(self.save_dataa)
            f1.close()
            messagebox.showinfo("SAVE","DATA SAVE SUCCESSFULLY")
        else:
            return
    def display_data(self):
        self.text_data.delete("1.0","end")
        self.text_data.insert("end","\tWelcome To Hospital Management System  !!")
        self.text_data.insert("end","\n---------------------------------------------------------------------")
        self.text_data.insert("end","\n\tPatient Details::")
        self.text_data.insert("end","\nPatient Name:{}".format(self.patient_name.get()))
        self.text_data.insert("end","\nPatient Id:{}".format(self.patientid.get()))
        self.text_data.insert("end","\nNHS Number:{}".format(self.nhs_number.get()))
        self.text_data.insert("end","\nPatient Address:{}".format(self.patient_addresss.get()))
        self.text_data.insert("end","\nDate of Birth:{}".format(self.date.get()))
        self.text_data.insert("end","\nPatient Ward:{}".format(self.ward.get()))
        self.text_data.insert("end","\nPatient Status:{}".format(self.status.get()))
        self.text_data.insert("end","\n---------------------------------------------------------------------")
        self.text_data.insert("end","\n\tMedicines Details::")
        self.text_data.insert("end","\nName of Tablet:{}".format(self.name_of_tablet.get()))
        self.text_data.insert("end","\nReferance NO:{}".format(self.reference.get()))
        self.text_data.insert("end","\nDose:{}".format(self.Dose.get()))
        self.text_data.insert("end","\nLot:{}".format(self.Lot.get()))
        self.text_data.insert("end","\nNo of tablet:{}".format(self.no_of_tablet.get()))
        self.text_data.insert("end","\nIssue DAte:{}".format(self.issue.get()))
        self.text_data.insert("end","\nExp Date:{}".format(self.exp.get()))
        self.text_data.insert("end","\nDialy Dose:{}".format(self.dailydose.get())) 
        self.text_data.insert("end","\nSide Effect:{}".format(self.sideeffect.get()))
        self.text_data.insert("end","\nFurther Info:{}".format(self.further.get()))
        self.text_data.insert("end","\nBlood pressure:{}".format(self.blopd.get()))
        self.text_data.insert("end","\nBody Temparature:{}".format(self.body.get()))
        self.text_data.insert("end","\nStorage Advice:{}".format(self.storage.get()))
        self.text_data.insert("end","\nMeditation:{}".format(self.meditationn.get()))
        self.text_data.insert("end","\n--------------------------Thanks you ----------------------------")
        
        self.save_data_database()
        self.clear_data()
    def save_data_database(self):
        cursor=self.connection.cursor()
        query="insert into Hospital values('{}','{}','{}','{}','{}','{}','{}','{}','{}','{}','{}','{}','{}','{}','{}','{}','{}','{}','{}','{}','{}')".format(self.patient_name.get(),self.patientid.get(),self.nhs_number.get(),self.patient_addresss.get(),self.date.get(),self.ward.get(),self.status.get(),self.name_of_tablet.get(),self.reference.get(),self.Dose.get(),self.Lot.get(),self.no_of_tablet.get(),self.issue.get(),self.exp.get(),self.dailydose.get(),self.sideeffect.get(),self.further.get(),self.blopd.get(),self.body.get(),self.storage.get(),self.meditationn.get())
        cursor.execute(query)
        self.connection.commit()
        messagebox.showinfo("Save","Data Save Successfully")
        self.display_table()
    def update_data(self):
        cursor=self.connection.cursor()
        # print("fevflgied")
        query="update Hospital SET Patient_Name='{}',NHS_Number='{}',Patient_Address='{}',Birth_Date='{}',Patient_Ward='{}',Patient_Status='{}',Tablet_Name='{}',Reference_Number='{}',Dose='{}',Lot='{}',NO_Tablet={},Issue_Date='{}',Exp_Date='{}',Dialy_Dose='{}',Side_Effect='{}',Further_Info='{}',Blood_Pressure='{}',Body_Temparature='{}',Storage_Advice='{}',Meditation='{}' where Patient_Id='{}'".format(self.patient_name.get(),self.nhs_number.get(),self.patient_addresss.get(),self.date.get(),self.ward.get(),self.status.get(),self.name_of_tablet.get(),self.reference.get(),self.Dose.get(),self.Lot.get(),self.no_of_tablet.get(),self.issue.get(),self.exp.get(),self.dailydose.get(),self.sideeffect.get(),self.further.get(),self.blopd.get(),self.body.get(),self.storage.get(),self.meditationn.get(),self.patientid.get())
        # print(query)
        cursor.execute(query)
        self.connection.commit()
        messagebox.showinfo("Info","DATA UPDATE SUCCESSFULLY")
        self.clear_data()
        self.display_table()
    def delete_row(self):
        cursor=self.connection.cursor()
        query="delete from Hospital where Patient_Id='{}'".format(self.patientid.get())
        cursor.execute(query)
        self.connection.commit()
        messagebox.showinfo("Info","DATA DELETE SUCCESSFULLY")
        self.clear_data()
        self.table.delete(*self.table.get_children()) 
        self.display_table()
    def display_table(self):
        cursor=self.connection.cursor()
        query="select * from Hospital"
        cursor.execute(query)
        result=cursor.fetchall()
        j=0
        if len(result)!=0:
            self.table.delete(*self.table.get_children()) 
            for i in result:
                self.table.insert('',j,text="end",values=(i[0],i[1],i[2],i[3],i[4],i[5],i[6],i[7],i[8],i[9],i[10],i[11],i[12],i[13],i[14],i[15],i[16],i[17],i[18],[19],i[20]))
        self.connection.commit()
    def get_cursor(self,p):
        self.cursor_get=self.table.focus()
        self.contents=self.table.item(self.cursor_get)
        row=self.contents['values']
        # print(row)
        self.patient_name.set(row[0])
        self.patientid.set(row[1])
        self.nhs_number.set(row[2])
        self.patient_addresss.set(row[3])
        self.date.set(row[4])
        self.ward.set(row[5])
        self.status.set(row[6])
        self.name_of_tablet.set(row[7])
        self.reference.set(row[8])
        self.Dose.set(row[9])
        self.Lot.set(row[10])
        self.no_of_tablet.set(row[11])
        self.issue.set(row[12])
        self.exp.set(row[13])
        self.dailydose.set(row[14])
        self.sideeffect.set(row[15])
        self.further.set(row[16])
        self.blopd.set(row[17])
        self.body.set(row[18])
        self.storage.set(row[19])
        self.meditationn.set(row[20])
        
    def exit_software(self):
        exit()
    def clear_data(self):
        self.name_of_tablet.set("")
        self.reference.set("")
        self.Dose.set("")
        self.Lot.set("")
        self.no_of_tablet.set("")
        self.issue.set("")
        self.exp.set("")
        self.dailydose.set("")
        self.sideeffect.set("")
        self.further.set("")
        self.blopd.set("")
        self.body.set("")
        self.storage.set("")
        self.meditationn.set("")
        self.patient_name.set("")
        self.patientid.set("")
        self.nhs_number.set("")
        self.patient_addresss.set("")
        self.date.set("")
        self.ward.set("")
        self.status.set("")
if __name__ == "__main__":   
    root=tk.Tk()
    h1=hospital(root)
    root.geometry("1530x790+0+0")
    root.configure(bg="green")
    root.maxsize(width=1530,height=790)
    root.title("HOSPITAL MANAGEMENT SYSTEM")
    # root.configure(bg="#F1A009")
    root.mainloop()
    